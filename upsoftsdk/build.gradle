apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.libraryVersion.upsoftsdk_versionCode
        versionName rootProject.ext.libraryVersion.upsoftsdk_versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        ndk {
//            abiFilters "armeabi"
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile rootProject.ext.dependencies.barlibrary
    compile rootProject.ext.dependencies.permisson
    compile rootProject.ext.dependencies.appcompat
    compile rootProject.ext.dependencies.nohttp
    compile rootProject.ext.dependencies.gson
    compile rootProject.ext.dependencies.design
    compile rootProject.ext.dependencies.glide
    compile rootProject.ext.dependencies.glidetransformations
    compile rootProject.ext.dependencies.gpuimage
    compile rootProject.ext.dependencies.fastjson
    compile rootProject.ext.dependencies.recyclerview
    compile rootProject.ext.dependencies.photoview
    compile rootProject.ext.dependencies.simplecropview
//    compile rootProject.ext.dependencies.imageselector
    compile rootProject.ext.dependencies.stetho
    compile rootProject.ext.dependencies.log
    compile rootProject.ext.dependencies.tiny
    compile rootProject.ext.dependencies.weex
}
